{"version":3,"file":"Label.js","sourceRoot":"","sources":["../src/Label.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAO,UAAU,MAAM,4CAA4C,CAAC;AACpE,OAAO,SAAS,MAAM,sDAAsD,CAAC;AAC7E,OAAO,QAAQ,MAAM,qDAAqD,CAAC;AAC3E,OAAO,aAAa,MAAM,0DAA0D,CAAC;AACrF,OAAO,EAAE,aAAa,EAAE,MAAM,4CAA4C,CAAC;AAE3E,OAAO,YAAY,MAAM,yBAAyB,CAAC;AACnD,OAAO,EAAE,WAAW,EAAE,MAAM,mCAAmC,CAAC;AAEhE,WAAW;AACX,OAAO,aAAa,MAAM,4CAA4C,CAAC;AAEvE,SAAS;AACT,OAAO,QAAQ,MAAM,iCAAiC,CAAC;AAEvD;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AAOH,IAAM,KAAK,aAAX,MAAM,KAAM,SAAQ,UAAU;IA2D7B,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpB,OAAK,CAAC,UAAU,GAAG,MAAM,aAAa,CAAC,0BAA0B,CAAC,CAAC;IACpE,CAAC;IAED;;;;;;;;OAQG;IAEH,QAAQ;QACP,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACd,OAAO;SACP;QAED,MAAM,cAAc,GAAI,IAAI,CAAC,WAAW,EAAkB,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAgB,CAAC;QACxG,IAAI,cAAc,EAAE;YACnB,cAAc,CAAC,KAAK,EAAE,CAAC;SACvB;IACF,CAAC;IAED,IAAI,YAAY;QACf,OAAO,OAAK,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;CACD,CAAA;AA3EA;IADC,QAAQ,EAAE;kCACE;AAYb;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wCACR;AAepB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;uCACT;AAgBnB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,IAAI,EAAE,CAAC;2CACjC;AAvD5B,KAAK;IANV,aAAa,CAAC;QACd,GAAG,EAAE,WAAW;QAChB,QAAQ,EAAE,SAAS;QACnB,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,QAAQ;KAChB,CAAC;GACI,KAAK,CAuFV;AAED,KAAK,CAAC,MAAM,EAAE,CAAC;AAEf,eAAe,KAAK,CAAC","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport { getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport WrappingType from \"./types/WrappingType.js\";\nimport { LABEL_COLON } from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport LabelTemplate from \"./generated/templates/LabelTemplate.lit.js\";\n\n// Styles\nimport labelCss from \"./generated/themes/Label.css.js\";\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-label</code> is a component used to represent a label for elements like input, textarea, select. <br><br>\n * The <code>for</code> property of the <code>ui5-label</code> must be the same as the id attribute of the related input element.<br><br>\n * Screen readers read out the label, when the user focuses the labelled control.\n * <br><br>\n * The <code>ui5-label</code> appearance can be influenced by properties,\n * such as <code>required</code> and <code>wrappingType</code>.\n * The appearance of the Label can be configured in a limited way by using the design property.\n * For a broader choice of designs, you can use custom styles.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Label\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webc.main.Label\n * @extends sap.ui.webc.base.UI5Element\n * @tagname ui5-label\n * @public\n */\n@customElement({\n\ttag: \"ui5-label\",\n\trenderer: litRender,\n\ttemplate: LabelTemplate,\n\tstyles: labelCss,\n})\nclass Label extends UI5Element {\n\t/**\n\t * Defines the labeled input by providing its ID.\n\t * <br><br>\n\t * <b>Note:</b> Can be used with both <code>ui5-input</code> and native input.\n\t *\n\t * @type {string}\n\t * @name sap.ui.webc.main.Label.prototype.for\n\t * @defaultvalue \"\"\n\t * @public\n\t */\n\t@property()\n\tfor!: string;\n\n\t/**\n\t * Defines whether colon is added to the component text.\n\t * <br><br>\n\t * <b>Note:</b> Usually used in forms.\n\t * @name sap.ui.webc.main.Label.prototype.showColon\n\t * @type {boolean}\n\t * @defaultvalue false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tshowColon!: boolean;\n\n\t/**\n\t * Defines whether an asterisk character is added to the component text.\n\t * <br><br>\n\t * <b>Note:</b> Usually indicates that user input (bound with the <code>for</code> property) is required.\n\t * In that case the <code>required</> property of\n\t * the corresponding input should also be set.\n\t *\n\t * @name sap.ui.webc.main.Label.prototype.required\n\t * @type {boolean}\n\t * @defaultvalue false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\trequired!: boolean;\n\n\t/**\n\t * Defines how the text of a component will be displayed when there is not enough space.\n\t * Available options are:\n\t * <ul>\n\t * <li><code>None</code> - The text will be truncated with an ellipsis.</li>\n\t * <li><code>Normal</code> - The text will wrap. The words will not be broken based on hyphenation.</li>\n\t * </ul>\n\t *\n\t * @name sap.ui.webc.main.Label.prototype.wrappingType\n\t * @type {sap.ui.webc.main.types.WrappingType}\n\t * @defaultvalue \"None\"\n\t * @public\n\t */\n\t@property({ type: WrappingType, defaultValue: WrappingType.None })\n\twrappingType!: `${WrappingType}`;\n\n\tstatic i18nBundle: I18nBundle;\n\n\tstatic async onDefine() {\n\t\tLabel.i18nBundle = await getI18nBundle(\"@ui5/webcomponents-fiori\");\n\t}\n\n\t/**\n\t * Defines the text of the component.\n\t * <br><b>Note:</b> Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n\t *\n\t * @type {Node[]}\n\t * @slot\n\t * @public\n\t * @name sap.ui.webc.main.Label.prototype.default\n\t */\n\n\t_onclick() {\n\t\tif (!this.for) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst elementToFocus = (this.getRootNode() as HTMLElement).querySelector(`#${this.for}`) as HTMLElement;\n\t\tif (elementToFocus) {\n\t\t\telementToFocus.focus();\n\t\t}\n\t}\n\n\tget _colonSymbol() {\n\t\treturn Label.i18nBundle.getText(LABEL_COLON);\n\t}\n}\n\nLabel.define();\n\nexport default Label;\n"]}